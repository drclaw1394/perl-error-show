Revision history for Perl extension Error::Show.
v0.4.0 2024-04-23
  [fixes]
  - Clean up of warnings test output
  - Support errors/stack frames using a line number of zero (change to defined test)

  [new features]
  - Command line usage now automatically adds a global signal handler for DIE
    to dump stack trace of uncaught fatal exceptions. As this module must be the
    first -M switch used, it should not interfere with other code which
    overwrites this handler later during execution

  [improvements]
  - reduce memory usage by removing use enum and use constant. Replace
    with constant::more

  [other]
  - Document addition of signal handler
  - Update dependency versions


v0.3.0 2023-05-09
  [new features]
  - calling context sub with an explicit single undef value (ie
    Error::Show::context undef) internally captures a stack trace/frame stack
    which is used for generating context. Aids in debugging when you just want
    to know how the context a subroutine was called in a non error state.


  [improvements]

  - Reduced memory usage. The IPC::Open3 and Symbol modules are not loaded
    unless they are actually required for CLI usage. Saves approx 25% on memory
    usage otherwise. Scalar::Util is only loaded for in program usage (for
    blessed subroutine). 
  - context subroutine is now callable via -> notation if preferred
  - the context subroutine symbol in now exported by default (when called from
    code). Previous behaviour can be achieved by explicitly importing the empty
    list
  - Removed unused importing/exporter code
 
  [fixes]
  - Fixed type in synopsis example

  [pod]
  - Documented changes to importing
  - Documented internal frame capture

  [tests]
  - added simple test for internal frame capture

v0.2.1 2023-03-10
  [fixes]
  - Stack trace arrays are now copied to prevent unwanted action at a distance
    and fix incorrect line numbers when multiple calls to context are performed
    on the stacke frames
  - Reverse option when using stack frames was not operating as documented. Now
    fixed
  [tests]
  - Added additional reverse test


v0.2.0 
  [new features]
  - added limit option to limit number of errors processed
  - added reverse option to reverse sequence of outputs
  - added 'advanced' eval/string program processing. Gives source code
    processing options to isolate context generation to a range of lines
    within a string program.
     * start_mark   
     * end_mark
     * start_offset
     * end_offset

  [fixes]
  - Removed unused code
  - Line numbering more consistent internally

  [pod]
  - Example for 'advanced string eval'
  - Fix typos and spelling


v0.1.1  2023-01-22
  [tests]
  - fixed failing frame test on perl 5.26/5.24
  
  [pod]
  - Fixed up eval example
  - Fixed typos reported by W.Braswell

  [other]
  - updated Makefile.PL and .gitignore with repo settings. Thankyou to mrdvt92
    via github.

v0.1.0  2023-01-18
	- original version

